{"input_text": "The database component, as the term suggests, mainly deals with the database part which stores the attribute data for the real world entities that need to be captured or managed as a part of the digitization process. This attribute data is often stored in an underlying  relational database . A  database table  often represents a single real world entity or object and will be used to store relevant attribute data. The database component is often linked or associated with the graphical component to complete an intelligent  GIS  system.\nIn some systems and in the context of message processing systems (often realtime systems), this term also refers to the goal of establishing a single agreed sequence of messages within a database formed by a particular but arbitrary sequencing of records.  The key concept is that data combined in a certain sequence is a \"truth\" which may be analyzed and processed giving particular results, and that although the sequence is arbitrary (and thus another correct but equally arbitrary sequencing would ultimately provide different results in any analysis), it is desirable to agree that the sequence enshrined in the \"single version of the truth\" is the version that will be considered \"the truth\", and that any conclusions drawn from analysis of the database are valid and unarguable, and (in a technical context) the database may be duplicated to a backup environment to ensure a persistent record is kept of the \"single version of the truth\".\nAerospike database  technology  is centered around row-based random access with indexes in memory and data in memory or on SSD (solid-state drive) storage. The database holds data that is accessible in real time.\nDocument-oriented database   Clusterpoint  uses inverted indexing model to provide fast  full-text search  for  XML  or  JSON  data objects and to deliver scale out ability for  Big data .   Clusterpoint  has built-in computing engine that allows execution of a combined SQL query, free text search and  JavaScript  code right inside the  distributed database .  Both data and inverted index through scalable  sharding  and  replication  can be distributed across a large number of servers to support billions of data objects in the same Clusterpoint database.  Clusterpoint query language JS/SQL blends together  SQL  and  JavaScript  syntax with full text search, where  inverted index  is being used to deliver milliseconds-range text search performance and relevant  pagination  in web and mobile applications.  In Clusterpoint database architecture inverted index also supports programmable  relevance   ranking  enabling to customize search output without extra coding efforts. Similarly to  relational databases , Clusterpoint supports distributed  ACID -compliant  database transactions  for strong document database consistency, where inverted index data is immediately updated along any XML or JSON document content updates.  Inverted index is also used to support near real-time  Big data  reporting,  analytics ,  drill-down  and  data mining  over  REST  API in Clusterpoint database.\nA NoSQL (originally referring to \"non SQL\", \"non relational\" or \"not only SQL\") database provides a mechanism for  storage  and  retrieval  of data which is modeled in means other than the tabular relations used in  relational database s. Such databases have existed since the late 1960s, but did not obtain the \"NoSQL\" moniker until a surge of popularity in the early twenty-first century, triggered by the needs of  Web 2.0  companies such as  Facebook ,  Google , and  Amazon.com . NoSQL databases are increasingly used in  big data  and  real-time web  applications.   NoSQL systems are also sometimes called \"Not only SQL\" to emphasize that they may support  SQL -like query languages.\nReal-time Business Intelligence systems are  event driven , and may use  Complex Event Processing ,  Event Stream Processing  and  Mashup (web application hybrid)  techniques to enable events to be analysed without being first transformed and stored in a database. These  in-memory database  techniques have the advantage that high rates of events can be monitored, and since data does not have to be written into databases data latency can be reduced to milliseconds.\nFirebase provides a realtime database and backend as a service. The service provides application developers an API that allows application data to be synchronized across clients and stored on Firebase's cloud. The company provides client libraries that enable integration with  Android ,  iOS ,  JavaScript ,  Java ,  Objective-C ,  swift  and  Node.js  applications. The database is also accessible through a REST API and bindings for several  JavaScript frameworks  such as  AngularJS ,  React ,  Ember.js  and  Backbone.js . The REST API uses the  Server-Sent Events  protocol, which is an API for creating HTTP connections for receiving push notifications from a server. Developers using the realtime database can secure their data by using the company's server-side-enforced security rules.\nA characteristic of modern database applications is that they facilitate simultaneous updates and queries from multiple users. Systems in the 1970s might have accomplished this by having each user in front of a  3270  terminal to a  mainframe computer . By the mid-1980s it was becoming more common to give each user a  personal computer  and have a program running on that PC that connected to a database  server . Information would be pulled from the database, transmitted over a network, and then arranged, graphed, or otherwise formatted by the program running on the PC. Starting in the mid-1990s it became more common to build database applications with a Web interface. Rather than develop custom software to run on a user's PC, the user would use the same Web browser program for every application. A database application with a Web interface had the advantage that it could be used on devices of different sizes, with different hardware, and with different operating systems. Examples of early database applications with Web interfaces include  amazon.com , which used the  Oracle relational database management system , the photo.net online community, whose implementation on top of  Oracle  was described in the book Database-Backed Web Sites (Ziff-Davis Press; May 1997), and  eBay , also running Oracle.\nReal-time databases can process these requests utilizing scheduling algorithms for concurrency control, prioritizing both students\u2019 requests in some way. Throughout this article, we assume that the system has a single processor, a disk based database, and a main memory pool.\nRTLinux realtime tasks get implemented as  kernel module s similar to the type of module that Linux uses for drivers, file systems, and so on. Realtime tasks have direct access to the hardware and do not use virtual memory. On initialization, a realtime task (module) informs the RTLinux kernel of its deadline, period, and release-time constraints.\nIn real-time databases, deadlines are formed and different kinds of systems respond to data that does not meet its deadline in different ways. In a real-time system, each transaction uses a timestamp to schedule the transactions. A priority mapper unit assigns a level of importance to each transaction upon its arrival in the database system that is dependent on how the system views times and other priorities. The timestamp method on relies on the arrival time in the system. Researchers indicate that for most studies, transactions are sporadic with unpredictable arrival times. For example, the system gives an earlier request deadline to a higher priority and a later deadline to a lower priority. Below is a comparison of different scheduling algorithms.\nA real-time database is a database system which uses  real-time processing  to handle workloads whose state is constantly changing. This differs from traditional databases containing persistent data, mostly unaffected by time. For example, a stock market changes very rapidly and is dynamic. The graphs of the different markets appear to be very unstable and yet a database has to keep track of current values for all of the markets of  the New York Stock Exchange . Real-time processing means that a transaction is processed fast enough for the result to come back and be acted on right away. Real-time databases are useful for accounting, banking, law,  medical record s,  multi-media , process control, reservation systems, and scientific data analysis.\nOperational database management systems (also referred to as  OLTP  On Line Transaction Processing databases), are used to manage dynamic data in real-time. These types of databases allow you to do more than simply view archived data. Operational databases allow you to modify that data (add, change or delete data), doing it in  real-time .\nSQLstream provides a relational stream processing platform called SQLstream Blaze for analyzing large volumes of service, sensor and machine and log file data in real-time. It performs real-time collection, aggregation, integration, enrichment and real-time analytics on the streaming data.  Data streams are analyzed using the industry standard  SQL language , using the  ANSI  standard, functionally rich SQL window function to analyze and aggregate real-time streaming data over fixed or sliding time windows, which can be further partitioned by user defined keys. Unlike a traditional  RDBMS  SQL query, which returns a result and exits, streaming SQL queries do not exit, generating results continuously as soon as new data become available. Patterns and exception events in data streams are detected, analyzed and reported 'on the fly' as the data arrive, that is, before the data are stored.  Like a database or data warehouse, SQLstream allows you to create multiple views over the data so that different applications and users can each get their own customized view of the streaming data. The partitioning allows many different analytics to be incrementally computed using a single SQL statement or window., effectively processing potentially millions of streams with a single statement.  For example, partitioning by a customer id would maintain a separate computation for each distinct customer.  This is extremely concise, but also allows for efficient parallel execution.   SQLstream Blaze also allows changes to be made to the queries and views without bringing down and recompiling existing applications.  This is very important for many Internet of Things and other smart services that must operate 24x7 on a continuous real-time basis, where application changes must be made without needing to bringing down the service or rebuild the application.  Part of SQLstream Blaze, StreamLab takes advantage of this capability in order to guide users who wish to explore data streams and understand their structure while the data are still flowing by generating new SQL queries on the fly based on user direction and analysis of data values driven by rules.  In this way, it provides an effective platform for performing real-time operational intelligence, which you can view as real-time business intelligence over streaming operational data.  SQLstream utilizes dataflow technology to execute many queries over high-velocity high-volume Big Data with a massively parallel standards-compliant SQL engine where the queries are executed concurrently and incrementally.  Unlike databases, SQL in SQLstream becomes a language for performing continuous parallel processing, in contrast to a language for data retrieval as commonly found in relational databases.  SQLstream is able to execute its queries in an optimized C++ multi-threaded dataflow engine which operates lock-free.  This enables people to create lock-free parallel processing applications easily, which otherwise require specialist skillets and are often difficult to get working and are often error prone.\nAlthough the real-time database system may seem like a simple system, problems arise during overload when two or more database transactions require access to the same portion of the database. A transaction is usually the result of an execution of a program that accesses or changes the contents of a database. A transaction is different from a stream because a stream only allows read-only operations, and transactions can do both read and write operations. This means in a stream, multiple users can read from the same piece of data, but they cannot both modify it. A database must let only one transaction operate at a time to preserve data consistency. For example, if two students demand to take the remaining spot for a section of a class and they hit submit at the same time, only one student should be able to register for it.\nThe database records not only what happened in the real world, but also what was officially recorded at different times.\nNear real-time also refers to delayed real-time transmission of voice and video. It allows playing video images, in approximately real-time, without having to wait for an entire large video file to download.  Incompatible databases can export/import to common flat files that the other database can import/export on a scheduled basis so that they can sync/share common data in \"near real-time\" with each other.\nRealtime maps show the situation of a phenomenon in close to  realtime  (only a few seconds or minutes delay). They are usually animated. Data is collected by sensors and the maps are generated or updated at regular intervals or on demand.\nRealtime spectrum analyzers are able to produce much more information for users to examine the frequency spectrum in more detail. A normal swept spectrum analyzer would produce max peak, min peak displays for example but a realtime spectrum analyzer is able to plot all calculated FFT's over a given period of time with the added colour-coding which represents how often a signal appears. For example, this image shows the difference between how a spectrum is displayed in a normal swept spectrum view and using a \"Persistence\" view on a realtime spectrum analyzer.\nTraditional databases are persistent but are incapable of dealing with dynamic data that constantly changes. Therefore, another system is needed. Real-time databases may be modified to improve accuracy and efficiency and to avoid conflict, by providing deadlines and wait periods to insure temporal consistency. Real-time database systems offer a way of monitoring a physical system and representing it in data streams to a database. A data stream, like memory, fades over time. In order to guarantee that the freshest and most accurate information is recorded there are a number of ways of checking transactions to make sure they are executed in the proper order. An online auction house provides an example of a rapidly changing database.\nReal-time databases are traditional databases that use an extension to give the additional power to yield reliable responses. They use timing constraints that represent a certain range of values for which the data are valid. This range is called temporal validity. A conventional database cannot work under these circumstances because the inconsistencies between the real world objects and the data that represents them are too severe for simple modifications. An effective system needs to be able to handle time-sensitive queries, return only temporally valid data, and support priority scheduling. To enter the data in the records, often a sensor or an input device monitors the state of the physical system and updates the database with new information to reflect the physical system more accurately. When designing a real-time  database system , one should consider how to represent valid time, how facts are associated with  real-time system . Also, consider how to represent attribute values in the database so that process transactions and data consistency have no violations.\nThe amount of research studying real-time database systems will increase because of commercial applications such as web based auction houses like e-bay. More developing countries are expanding their phone systems, and the number of people with cell phones in the United States as well as other places in the world continues to grow. Also likely to spur real-time research is the exponentially increasing speed of the microprocessor. This also enables new technologies such as web-video conferencing and instant messenger conversations in sound and high-resolution video, which are reliant on real-time database systems. Studies of temporal consistency result in new protocols and timing constraints with the goal of handling real-time transactions more effectively.\nReal-time computing. In computer science, real-time computing (RTC), or reactive computing describes hardware and software systems subject to a real-time constraint, for example from event to system response. Real-time programs must guarantee response within specified time constraints, often referred to as deadlines.\nAlso see real-time clock and real-time operating system. Real time is a level of computer responsiveness that a user senses as sufficiently immediate or that enables the computer to keep up with some external process (for example, to present visualizations of the weather as it constantly changes). Real-time is an adjective pertaining to computers or processes that operate in real time.\nnrt - Computer Definition. 1  near-realtime. Referring to a quality of service (QoS) level designed for applications that do not require transmission to take place in real time, but nearly so.That is to say the transmission must take place within a reasonably short time from the exact moment as the event itself takes place in the real world.\nAn active GPS tracking system is also known as a real-time system as this method automatically sends the information on the GPS system to a central tracking portal or system in real-time as it happens.\nReal Time Operating System (RTOS) On hearing this term many of the programmers and computer enthusiasts think differently. It differs from the general purpose OS, RTOS is a real time OS working with real time constraints as power, time and efficient usage of memory. Most of the embedded systems are bound to real time constraints and it is achieved using real time system.\nAlso see real-time clock and real-time operating system. Real time is a level of computer responsiveness that a user senses as sufficiently immediate or that enables the computer to keep up with some external process (for example, to present visualizations of the weather as it constantly changes).\nReal-time is an adjective pertaining to computers or processes that operate in real time. Real time describes a human rather than a machine sense of time. In the days when mainframe batch computers were predominant, an expression for a mainframe that interacted immediately with users working from connected terminals was online in real time.", "key": "58_1", "timestamp": "2020-06-23 21:18:59.156032", "settings": {"top_p": 0.9, "gen_frac": 0.5, "spec_frac": 0.8}}